name: "Terraform-AWS-Infra-Deployment"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, release]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment (dev, qa, uat, prod)"
        required: true
        default: "prod"
      region:
        description: "AWS Region"
        required: true
        default: "us-east-2"
      action:
        description: "Terraform action to perform: apply or destroy"
        required: false
        default: "apply"

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: false

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
      AWS_REGION: ${{ github.event.inputs.region }}
      TF_WORKING_DIR: ./${{ github.event.inputs.environment }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform fmt check
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check

      - name: Terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan -lock=false

  approve:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: plan
    # This references the same environment name you chose above.
    # In your repo settings > Environments, configure protections/reviewers.
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: "Waiting for manual approvalâ€¦"
        run: echo "Once approved in the UI, the deploy job will start."

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: approve
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
      AWS_REGION: ${{ github.event.inputs.region }}
      TF_WORKING_DIR: ./${{ github.event.inputs.environment }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform init (again)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform Apply
        if: ${{ github.event.inputs.action != 'destroy' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform destroy -auto-approve -lock=false
